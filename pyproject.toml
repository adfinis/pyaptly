[tool.poetry]
name = "pyaptly"
version = "2.0.0"
description = "Automates the creation and managment of aptly mirrors and snapshots based on toml input files."
authors = ["Jean-Louis Fuchs <jean-louis.fuchs@adfinis.com>"]
license = "AGPL-3.0-or-later"
readme = "README.md"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # pydocstyle
    "D",
    # Pyflakes
    "F",
    # pyupgrade
    #"UP", # TODO enable
    # flake8-bugbear
    "B",
    # isort
    "I",
]
ignore = [
    "D203",
    "D212",
    "D107", # TODO remove
]

[tool.mypy]
check_untyped_defs = true

[tool.poetry.scripts]
pyaptly = 'pyaptly.cli:entry_point'

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "pragma: todo cover",
    "@pytest.mark.skip",
]
omit = []
show_missing = true

[tool.poetry.dependencies]
python = "^3.11"
pyyaml = "^6.0.1"
click = "^8.0.0"
tomli = "^2.0.1"
tomli-w = "^1.0.0"
colorama = "^0.4.6"
frozendict = "^2.2.0"

[tool.poetry.group.dev.dependencies]
freezegun = "^1.2.2"
hypothesis = "^6.87.1"
testfixtures = "^7.2.0"
mock = "^5.1.0"

pytest = "^7.4.3"
mypy = "^1.7.1"
pdbpp = "^0.10.3"


types-toml = "^0.10.8.7"
types-pyyaml = "^6.0.12.12"
pytest-coverage = "^0.0"
pyp2rpm = "3.3.10"
types-colorama = "^0.4.15.20240311"
ruff = "^0.3.2"

[tool.poetry.group.lsp.dependencies]
python-lsp-server = "^1.9.0"
python-lsp-ruff = "^2.2.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
